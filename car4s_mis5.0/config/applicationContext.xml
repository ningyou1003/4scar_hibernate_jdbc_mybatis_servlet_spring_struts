<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
		http://www.springframework.org/schema/context   
		http://www.springframework.org/schema/context/spring-context-3.0.xsd   
		http://www.springframework.org/schema/tx   
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
		http://www.springframework.org/schema/aop    	
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
   <!-- 依赖注入注解启用配置 -->
   <context:annotation-config/>
   <!-- bean自动扫描启用配置 -->
   <context:component-scan base-package="com.entor"/>
   <!-- 面向切面注解启用配置 -->
   <!-- <aop:aspectj-autoproxy/> -->
   <!-- 如果目标对象是action -->
   <!-- <aop:aspectj-autoproxy proxy-target-class="true"/> -->
   <!-- 加载jdbc.properties配置文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 配置数据源需要commons-dbcp.jar和commons-pool.jar- -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driverClassName}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="${initialSize}" />
		<!-- 连接池的最大值 -->
		<property name="maxActive" value="${maxActive}" />
		<!-- 最大空闲值.当经过一个高峰时间后,连接池可以慢慢将已经用不到的连接慢慢释放一部分,一直减少到maxIdle为止 -->
		<property name="maxIdle" value="${maxIdle}" />
		<!-- 最小空闲值.当空闲的连接数少于阀值时,连接池就会预申请去一些连接,以免洪峰来时来不及申请 -->
		<property name="minIdle" value="${minIdle}" />
	</bean>

	<!-- 配置Spring数据源事务管理器 -->
    <bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean> 
	   <!-- 定义事务通知，在通知中指定事务管理器 -->
   <tx:advice id="transactionAdvice" transaction-manager="txManager">
      <tx:attributes>
         <!-- 设置需要事务的方法 -->
         <tx:method name="add*" propagation="REQUIRED"/>
         <tx:method name="update*" propagation="REQUIRED"/>
         <tx:method name="delete*" propagation="REQUIRED"/>
         <!-- 设置不需要事务的方法 -->
         <tx:method name="*" propagation="NOT_SUPPORTED" read-only="true"/>
      </tx:attributes>
   </tx:advice>
   <!-- 设置AOP -->
   <aop:config>
      <!-- 定义切入点，也就是要拦截的哪些类的哪些方法 -->
      <aop:pointcut id="fm" expression="execution(* com.entor.dao.impl.*.*(..))" />
      <!-- 织入事务通知 -->
      <aop:advisor pointcut-ref="fm" advice-ref="transactionAdvice"/>
   </aop:config> 
</beans>








