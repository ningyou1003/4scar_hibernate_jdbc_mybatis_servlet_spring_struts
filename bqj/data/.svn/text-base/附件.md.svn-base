
## 菜单位置 [示例代码--附件上传]


####### 页面html, 参考WebRoot/app/example/example.html #######

1. 引入相关js

<!-- 附件相关js start, 注意必须在控制器js前引入-->
<link rel="stylesheet" type="text/css" href="../../assets/js/swfupload/css/default.css"/>
<script type="text/javascript" src="../../assets/js/swfupload/swfupload.js"></script>
<script type="text/javascript" src="../../assets/js/swfupload/handlers.js"></script>
<script type="text/javascript" src="../../assets/js/swfupload/myswfup.js"></script>
<!-- 附件相关js end -->

2. 安排附件列表

<!-- 附件列表 start -->
<table id="attTable" cellspacing="0" cellpadding="0" border="1" style="border-color: #B5D6E6; width: 100%; border-collapse: collapse; border-collapse: collapse;
                                                                            min-height: 50px">
    <tr>
        <td align="right" valign="middle" style="width: 20%; min-height: 50px">
            附件列表:
        </td>
        <td align="left" style="width: 80%;">
            <ul id="attList">
                <li></li>
            </ul>
        </td>
    </tr>
</table>
<!-- 附件列表 end -->

3. 安排上传附件按钮

<!-- 附件按钮 start -->
<div style="display: inline; float: left; padding-left: 4px; padding-top: 10px">
    <form>
        <div style="display: inline;">
            <span id="spanButtonPlaceholder"></span>
            <input id="btnUpload" type="button" value="上  传" onclick="startUploadFile();" class="btn" />
            <input id="btnCancel" type="button" value="取消所有上传" onclick="cancelUpload();" disabled="disabled"
                   class="btn1" />
        </div>
    </form>
    <div id="divFileProgressContainer" style="display: none;">
    </div>
    <div id="thumbnails">
        <table id="infoTable" border="0" width="530" style="display: inline; padding: 2px;">
        </table>
    </div>
</div>
<!-- 附件按钮 end -->



####### 页面js, 参考WebRoot/app/example/example.js #######

页面就绪时执行initUpload(relateType, relateId)
relateType -- 关联类型, 自己起名
relateId ---- 关联id, 一般是keyid

例如:
$(document).ready(function(e) {
    THISPAGE.init();
	initUpload("example", vm.data.keyid);
});

保存时, 需要提交一个参数randomNum.

例如保存时如果这样写:
Public.ajaxPost(url, vm.data.$model, function(json)

则vm.data里应该写个randomNum属性
data : {
    keyid : "",
    title : "",
    randomNum: randomNum
},

randomNum的值来自最开始引入的js文件, 不需要管

####### 后台controller, 参考com.emindsoft.zsj.example.ExampleCtrl #######

在success之前执行processAttachment(relateId);
relateId -- 关联id, 一般就是保存后的到的keyId

